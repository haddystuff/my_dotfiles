# questions
author:
  type: str
  help: "Author name"

email:
  type: str
  help: "Email address"
  default: "example@example.com"

project_name:
  type: str
  help: "Project name"
  validator: >-
    {% if not (project_name | regex_search('^[a-z][a-z0-9\-_]+$')) %}
    project_name must start with a letter, followed one or more letters, digits or dashes all lowercase.
    {% endif %}

project_slug:
  type: str
  help: "Project slug"
  default: "{{ project_name.lower().replace(' ', '_').replace('-', '_') }}"
  validator: >-
    {% if not (project_slug | regex_search('^[a-z][a-z0-9_]+$')) %}
    project_slug must start with a letter, followed one or more letters, digits or underscores all lowercase.
    {% endif %}
    {% if project_slug != project_slug.lower() %}
    project_slug must be all lowercase.
    {% endif %}

project_description:
  type: str
  help: "Project description"
  default: "This is a python project"

linters:
  type: str
  help: "Which linters do you want to use?"
  multiselect: True
  choices:
    - flake8
    - ruff
    - pylint

mkdocs:
  type: bool
  help: "Do you want to include mkdocs?"
  default: False

taskfile:
  type: bool
  help: "Do you want to include taskfile"
  default: False

pytest:
  type: bool
  help: "Do you want to include pytest?"
  default: False

codecov:
  type: bool
  help: "Do you want to include codecov?"
  when: pytest
  default: False

dockerfile:
  type: bool
  help: "Do you want to include Dockerfile?"
  default: False

docker_compose:
  type: bool
  help: "Do you want to include docker-compose?"
  default: False

run_uv_sync:
  type: bool
  help: "Run uv sync install after {{ project_name }} generation?"
  default: yes

configure_git:
  type: bool
  help: "Configure git? (init, pre-commit)"
  default: yes

# Variables
_templates_suffix: .j2
_subdirectory: project
_tasks:
  # Run 'uv sync' to generate lockfile
  - "{% if run_uv_sync %}uv sync{% endif %}"
  # Setup pre-commit
  - "{% if configure_git %}git init{% endif %}"
  - "{% if configure_git %}uv run pre-commit install{% endif %}"